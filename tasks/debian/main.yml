---

- name: MailCow | Installing dependencies
  ansible.builtin.apt:
    name: "{{ MC_HC.packages.base }}"
    update_cache: yes
    state: present

- name: MailCow | Getting supported docker-compose version
  ansible.builtin.uri:
    url: "{{ MC_HC.url_compose_version }}"
    return_content: yes
  register: mc_compose_version
  ignore_errors: true

- name: MailCow | Installing docker
  ansible.builtin.include_role:
    name: ansibleguy.infra_docker_minimal
  vars:
    docker:
      compose:
        enable: true
        version: "{{ mc_compose_version.content | default(MC_HC.compose_version_fallback, true) }}"
  tags: docker
  args:
    apply:
      tags: docker

- name: MailCow | Configuring Nginx webserver
  ansible.builtin.include_role:
    name: ansibleguy.infra_nginx
  vars:
    nginx:
      sites:
        mailcow: "{{ mc_conditionals_nginx | combine(MC_CONFIG.nginx, recursive=true) }}"
  when: MC_CONFIG.manage.webserver | bool
  tags: webserver
  args:
    apply:
      tags: webserver

- name: MailCow | Checking if MailCow is initialized
  ansible.builtin.stat:
    path: "{{ MC_CONFIG.path }}/mailcow.conf"
  register: mc_config_file

- name: MailCow | Installing
  ansible.builtin.import_tasks: install.yml
  when: not mc_config_file.stat.exists

- name: MailCow | Disabling IPv6 (after installation)
  ansible.builtin.include_tasks: ipv6_disable.yml
  when: MC_CONFIG.ipv6_after_install

- name: MailCow | Adding service files
  ansible.builtin.template:
    src: "templates/etc/systemd/system/mailcow.service.j2"
    dest: "/etc/systemd/system/{{ MC_CONFIG.service_prefix }}mailcow.service"
    owner: 'root'
    group: 'root'
    mode: 0755

- name: MailCow | Enabling/starting service
  ansible.builtin.systemd:
    daemon_reload: yes
    name: "{{ MC_CONFIG.service_prefix }}mailcow.service"
    enabled: yes
    state: started

- name: MailCow | Adding update service
  ansible.builtin.template:
    src: "templates/etc/systemd/system/{{ item }}.j2"
    dest: "/etc/systemd/system/{{ MC_CONFIG.service_prefix }}{{ item }}"
    owner: 'root'
    group: 'root'
    mode: 0755
  loop:
    - 'mailcow-update.service'
    - 'mailcow-update.timer'
  when: >
    MC_CONFIG.auto_update.enable or
    MC_CONFIG.auto_update.check

- name: MailCow | Enabling/starting update timer
  ansible.builtin.systemd:
    daemon_reload: yes
    name: "{{ MC_CONFIG.service_prefix }}mailcow-update.timer"
    enabled: yes
    state: started
  when: >
    MC_CONFIG.auto_update.enable or
    MC_CONFIG.auto_update.check

- name: MailCow | Adding backup directory
  ansible.builtin.file:
    state: directory
    mode: 0755  # the script does not like 0750..
    owner: 'root'
    group: 'root'
    path: "{{ MC_CONFIG.backup.path }}"
  when: MC_CONFIG.backup.enable

- name: MailCow | Adding backup service
  ansible.builtin.template:
    src: "templates/etc/systemd/system/{{ item }}.j2"
    dest: "/etc/systemd/system/{{ MC_CONFIG.service_prefix }}{{ item }}"
    owner: 'root'
    group: 'root'
    mode: 0755
  loop:
    - 'mailcow-backup.service'
    - 'mailcow-backup.timer'
  when: MC_CONFIG.backup.enable

- name: MailCow | Enabling/starting backup timer
  ansible.builtin.systemd:
    daemon_reload: yes
    name: "{{ MC_CONFIG.service_prefix }}mailcow-backup.timer"
    enabled: yes
    state: started
  when: MC_CONFIG.backup.enable
